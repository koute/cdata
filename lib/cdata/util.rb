# encoding: utf-8

#  Copyright (C) 2012  Jan Bujak <j+cdata@jabster.pl>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program. If not, see <http://www.gnu.org/licenses/>.
#
#  As a special exception, you may create a larger work that contains part or
#  all of the C/C++ code generated by CData and distribute that work under
#  terms of your choice. If you modify this library, you may extend this
#  exception to your version of the library, but you are not obliged to do so.
#  If you do not wish to do so, delete this exception statement from your
#  version.

module CData

    private

    class StringIO < ::StringIO

        attr_accessor :extra_indentation

        def m_puts( string )

            @extra_indentation ||= 0

            lines = string.rstrip.split( "\n" )
            empty_lines = 0
            empty_lines += 1 while lines[ empty_lines ].strip.empty?
            lines = lines[ empty_lines..-1 ]

            min_indentation = nil
            lines.each do |line|
                next if line.strip.empty?
                line =~ /\A(\s*)/

                indentation = $1.length
                min_indentation = indentation if min_indentation == nil || indentation < min_indentation
            end

            result = lines.collect do |line|

                if line.strip.empty?
                    ""
                else
                    line =~ /\A(\s*)/

                    indentation = $1.length - min_indentation + @extra_indentation
                    (" " * indentation) + line.lstrip
                end

            end

            self.puts result.join( "\n" )
            self.puts

        end

    end

end
